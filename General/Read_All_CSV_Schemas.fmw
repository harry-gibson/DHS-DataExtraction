#! <?xml version="1.0" encoding="utf-8" ?>
#! <WORKSPACE
#    
#    
#    Command-line to run this workspace:
#    
#    
#    "C:\Program Files\FME\fme.exe" C:\Users\zool1301\Documents\DHS\DataExtraction\General\Read_All_CSV_Schemas.fmw
#          --SourceDataset_SCHEMA "\\129.67.26.176\map_data\DHS_Automation\DataExtraction\20150626_FullSiteScrape\ProcessedTables\*.csv"
#          --SCHEMA_IN_REAL_FORMAT_SCHEMA "GUESS_FROM_EXTENSION"
#          --FEATURE_TYPES ""
#    
#    
#! USAGE=""
#! FME_STROKE_MAX_DEVIATION="0"
#! SOURCE_ROUTING_FILE=""
#! LAST_SAVE_BUILD="FME(R) 2015.1.3.0 (20151105 - Build 15570 - WIN64)"
#! BEGIN_PYTHON=""
#! LAST_SAVE_DATE="2015-11-17T12:09:43"
#! LEGAL_TERMS_CONDITIONS=""
#! SOURCE="NONE"
#! SHOW_INFO_NODES="true"
#! FME_DOCUMENT_PRIORGUID=""
#! LOG_FILE=""
#! CATEGORY=""
#! MAX_LOG_FEATURES="200"
#! DOC_TOP_LEFT="150 -371"
#! ATTR_TYPE_ENCODING="SDF"
#! FME_DOCUMENT_GUID="b4750b28-f7e0-41ab-b052-22f86fa47a26"
#! IGNORE_READER_FAILURE="No"
#! END_PYTHON=""
#! DOC_EXTENTS="900 310.999"
#! FME_IMPLICIT_CSMAP_REPROJECTION_MODE="Auto"
#! DESTINATION_ROUTING_FILE=""
#! END_TCL=""
#! SHOW_ANNOTATIONS="true"
#! ZOOM_SCALE="100"
#! BEGIN_TCL=""
#! LOG_MAX_RECORDED_FEATURES="200"
#! TITLE=""
#! REQUIREMENTS_KEYWORD=""
#! WARN_INVALID_XFORM_PARAM="Yes"
#! HISTORY=""
#! PASSWORD=""
#! FME_REPROJECTION_ENGINE="FME"
#! REDIRECT_TERMINATORS="NONE"
#! LOG_MAX_PRECISION="Yes"
#! WORKSPACE_VERSION="1"
#! FME_GEOMETRY_HANDLING="Enhanced"
#! MULTI_WRITER_DATASET_ORDER="BY_ID"
#! DESTINATION="NONE"
#! REQUIREMENTS=""
#! FME_BUILD_NUM="15570"
#! DESCRIPTION=""
#! FME_SERVER_SERVICES=""
#! VIEW_POSITION="-207.002 0"
#! >
#! <DATASETS>
#! <DATASET
#! IS_SOURCE="true"
#! ROLE="READER"
#! FORMAT="SCHEMA"
#! DATASET="$(SourceDataset_SCHEMA)"
#! KEYWORD="SCHEMA_1"
#! MULTI_GEOM_ALLOWED="false"
#! ATTR_MAX_LENGTH="60"
#! ATTR_CASE="ANY"
#! ALLOWED_FEAT_TYPES=""
#! WRITE_DEFS="false"
#! DEFLINE_TEMPLATE="fme_type {FME_GEN_GEOMETRY}"
#! DEFLINE_ATTRS="false"
#! EXPOSABLE_ATTRS="fme_color char(50) fme_text_size real64 fme_format_short_name varchar(200) fme_feature_type char(50) fme_basename char(50) fme_start_angle real64 fme_geometry fme_char(50) attribute{}.name varchar(200) attribute{}.fme_data_type varchar(200) fme_type char(50) multi_reader_full_id int32 fme_sweep_angle real64 fme_format_long_name varchar(200) fme_coordinate_system varchar(200) fme_dataset char(50) fme_fill_color char(50) fme_rotation real64 attribute{}.native_data_type varchar(200) fme_text_string char(50) fme_primary_axis real64 fme_geometry{} varchar(200) fme_secondary_axis real64 multi_reader_keyword char(50) multi_reader_type char(50) multi_reader_id int32"
#! DEFLINE_PARMS=""
#! ATTR_INDEX_TYPES=""
#! ATTR_NAME_INVALID_CHARS=""
#! SUPPORTS_FEATURE_TYPE_FANOUT="true"
#! ENABLED="true"
#! DYNAMIC_FEATURE_TYPES_LIST_ON_MERGE="true"
#! DATASET_TYPE="FILEURLDIR"
#! GENERATE_FME_BUILD_NUM="15570"
#! MAX_FEATURES=""
#! COORDSYS=""
#! FEATURE_TYPES="$(FEATURE_TYPES)"
#! START_FEATURE=""
#! MIN_FEATURES=""
#! MAX_FEATURES_PER_FEATURE_TYPE=""
#! >
#! <METAFILE_PARAMETER
#! NAME="READER_AUTO_EXPOSE"
#! VALUE="attribute{}.name varchar(200) attribute{}.fme_data_type varchar(200) attribute{}.native_data_type varchar(200) fme_format_long_name varchar(200) fme_format_short_name varchar(200) fme_basename char(50)"
#! />
#! <METAFILE_PARAMETER
#! NAME="AUTO_PUBLISH"
#! VALUE="SourceDataset SCHEMA_IN_REAL_FORMAT"
#! />
#! </DATASET>
#! </DATASETS>
#! <DATA_TYPES>
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_char(width)"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="char"
#! FME_TYPE="fme_char(width)"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="varchar(width)"
#! FME_TYPE="fme_varchar(width)"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="buffer"
#! FME_TYPE="fme_buffer"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="datetime"
#! FME_TYPE="fme_datetime"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="date"
#! FME_TYPE="fme_date"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="time"
#! FME_TYPE="fme_time"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="decimal(width,decimal)"
#! FME_TYPE="fme_decimal(width,decimal)"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="real32"
#! FME_TYPE="fme_real32"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="real64"
#! FME_TYPE="fme_real64"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="uint8"
#! FME_TYPE="fme_uint8"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="int16"
#! FME_TYPE="fme_int16"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="uint16"
#! FME_TYPE="fme_uint16"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="int32"
#! FME_TYPE="fme_int32"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="uint32"
#! FME_TYPE="fme_uint32"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="int64"
#! FME_TYPE="fme_int64"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="uint64"
#! FME_TYPE="fme_uint64"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="boolean"
#! FME_TYPE="fme_boolean"
#! FORMAT="SCHEMA"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="copied"
#! FME_TYPE="fme_buffer"
#! FORMAT="SCHEMA"
#! />
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_point"
#! FME_TYPE="fme_point"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_line"
#! FME_TYPE="fme_line"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_area"
#! FME_TYPE="fme_area"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_text"
#! FME_TYPE="fme_text"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_ellipse"
#! FME_TYPE="fme_ellipse"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_arc"
#! FME_TYPE="fme_arc"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_rectangle"
#! FME_TYPE="fme_rectangle"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_rounded_rectangle"
#! FME_TYPE="fme_rounded_rectangle"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_no_geom"
#! FME_TYPE="fme_no_geom"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_any"
#! FME_TYPE="fme_no_geom"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_raster"
#! FME_TYPE="fme_raster"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_solid"
#! FME_TYPE="fme_solid"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_surface"
#! FME_TYPE="fme_surface"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_area"
#! FME_TYPE="fme_point_cloud"
#! FORMAT="SCHEMA"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="fme_rounded_rectangle"
#! FME_TYPE="fme_collection"
#! FORMAT="SCHEMA"
#! />
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! <FEATURE_TYPE
#! IS_SOURCE="true"
#! NODE_NAME="schema"
#! FEATURE_TYPE_NAME=""
#! FEATURE_TYPE_NAME_QUALIFIER=""
#! IS_EDITABLE="false"
#! IDENTIFIER="1"
#! FEAT_GEOMTYPE="fme_no_geom"
#! POSITION="150 -300"
#! BOUNDING_RECT="150 -300 839.004 71"
#! ORDER="5e+014"
#! COLLAPSED="false"
#! KEYWORD="SCHEMA_1"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! HIDDEN_USER_ATTRS=""
#! MERGE_FILTER="*"
#! MERGE_FILTER_TYPE="FILTER_TYPE_GLOB"
#! MERGE_FILTER_CASE_SENSITIVE="true"
#! DYNAMIC_SCHEMA="true"
#! >
#! <FEAT_ATTRIBUTE ATTR_NAME="fme_feature_type_name" ATTR_TYPE="varchar(200)" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#! <FEAT_ATTRIBUTE ATTR_NAME="attribute{}.name" ATTR_TYPE="varchar(200)"  EXPOSABLE_ATTR="true" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#! <FEAT_ATTRIBUTE ATTR_NAME="attribute{}.fme_data_type" ATTR_TYPE="varchar(200)"  EXPOSABLE_ATTR="true" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#! <FEAT_ATTRIBUTE ATTR_NAME="attribute{}.native_data_type" ATTR_TYPE="varchar(200)"  EXPOSABLE_ATTR="true" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#! <FEAT_ATTRIBUTE ATTR_NAME="fme_format_long_name" ATTR_TYPE="varchar(200)"  EXPOSABLE_ATTR="true" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#! <FEAT_ATTRIBUTE ATTR_NAME="fme_format_short_name" ATTR_TYPE="varchar(200)"  EXPOSABLE_ATTR="true" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#! <FEAT_ATTRIBUTE ATTR_NAME="fme_basename" ATTR_TYPE="char(50)"  EXPOSABLE_ATTR="true" ATTR_HAS_PORT="true" ATTR_VALUE=""/>
#! </FEATURE_TYPE>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI FILE_OR_URL SourceDataset_SCHEMA All_files|* Source Dataset:"
#! DEFAULT_VALUE="\\129.67.26.176\map_data\DHS_Automation\DataExtraction\20150626_FullSiteScrape\ProcessedTables\*.csv"
#! IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI READERPICK SCHEMA_IN_REAL_FORMAT_SCHEMA Input Format:"
#! DEFAULT_VALUE="GUESS_FROM_EXTENSION"
#! IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL FEATURE_TYPES FEATURE_TYPES &lt;backslash&gt;&lt;backslash&gt;129.67.26.176&lt;backslash&gt;map_data&lt;backslash&gt;DHS_Automation&lt;backslash&gt;DataExtraction&lt;backslash&gt;20150626_FullSiteScrape&lt;backslash&gt;ProcessedTables&lt;backslash&gt;*.csv,_FORMAT_OVERRIDE_,SCHEMA,_DATASET_OVERRIDE_,SourceDataset_SCHEMA,REAL_FORMAT,GUESS_FROM_EXTENSION,EXPOSE_ATTRS_GROUP,FME_DISCLOSURE_OPEN,_MERGE_SCHEMAS,YES,SCHEMA_READER,yes,DYNAMIC_WORKFLOW,yes,_MERGE_SCHEMAS,YES Feature Types to Read:"
#! DEFAULT_VALUE=""
#! IS_STAND_ALONE="false"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#! IDENTIFIER="4"
#! COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Here we just read all the schemas of ALL the csv files and dump them out to an FFS file (this is the only format supporting a list attribute)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#! POSITION="150 -60.0006"
#! TOP_LEFT="150 -60.0006"
#! BOTTOM_RIGHT="900 -110.001"
#! BOUNDING_RECT="150 -60.0006 750 50"
#! ORDER="5e+014"
#! FOLLOW_ANCHOR="true"
#! INFO_NODE="false"
#! COLOUR="1,1,0.784314,0.196078"
#! SIZE_POLICY="10"
#! COMMENT_TYPE="REGULAR"
#! ANCHORED_NODE="0"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#! IDENTIFIER="2"
#! TYPE="Inspector"
#! VERSION="3"
#! POSITION="1050 -300"
#! BOUNDING_RECT="1050 -300 -1 -1"
#! ORDER="5e+014"
#! PARMS_EDITED="false"
#! ENABLED="true"
#! LAST_PARM_EDIT="15570"
#! >
#! <XFORM_PARM PARM_NAME="TACKATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="THINNER_INTERVAL" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="_All_"/>
#! <XFORM_PARM PARM_NAME="VECTOR_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_START_COL" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="THINNER_TYPE_DISPLAY" PARM_VALUE="No Thinning"/>
#! <XFORM_PARM PARM_NAME="PEN_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_NUM_COLS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="POINTCLOUD_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="THINNER_MAX_NUM_POINTS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_NUM_ROWS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_START_ROW" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_VISUALIZATION_OPTION" PARM_VALUE="No Reduction"/>
#! <XFORM_PARM PARM_NAME="AREA_COLOR" PARM_VALUE=""/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#! IDENTIFIER="3"
#! SOURCE_NODE="1"
#! TARGET_NODE="2"
#! SOURCE_PORT_DESC="-1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </WORKSPACE>
#! 
GUI IGNORE SourceDataset_SCHEMA_1,SCHEMA_IN_REAL_FORMAT_SCHEMA_1,SCHEMA_IN_EXPOSE_ATTRS_GROUP_SCHEMA_1,SCHEMA_IN_NETWORK_AUTHENTICATION_SCHEMA_1
DEFAULT_MACRO SourceDataset_SCHEMA \\129.67.26.176\map_data\DHS_Automation\DataExtraction\20150626_FullSiteScrape\ProcessedTables\*.csv
GUI FILE_OR_URL SourceDataset_SCHEMA All_files|* Source Dataset:
DEFAULT_MACRO SCHEMA_IN_REAL_FORMAT_SCHEMA GUESS_FROM_EXTENSION
GUI READERPICK SCHEMA_IN_REAL_FORMAT_SCHEMA Input Format:
DEFAULT_MACRO FEATURE_TYPES 
GUI OPTIONAL FEATURE_TYPES FEATURE_TYPES <backslash><backslash>129.67.26.176<backslash>map_data<backslash>DHS_Automation<backslash>DataExtraction<backslash>20150626_FullSiteScrape<backslash>ProcessedTables<backslash>*.csv,_FORMAT_OVERRIDE_,SCHEMA,_DATASET_OVERRIDE_,SourceDataset_SCHEMA,REAL_FORMAT,GUESS_FROM_EXTENSION,EXPOSE_ATTRS_GROUP,FME_DISCLOSURE_OPEN,_MERGE_SCHEMAS,YES,SCHEMA_READER,yes,DYNAMIC_WORKFLOW,yes,_MERGE_SCHEMAS,YES Feature Types to Read:
INCLUDE [ if {{$(SourceDataset_SCHEMA)} == {}} { puts_real {Parameter 'SourceDataset_SCHEMA' must be given a value.}; exit 1; }; ]
INCLUDE [ if {{$(SCHEMA_IN_REAL_FORMAT_SCHEMA)} == {}} { puts_real {Parameter 'SCHEMA_IN_REAL_FORMAT_SCHEMA' must be given a value.}; exit 1; }; ]
#! START_HEADER
#! START_WB_HEADER
READER_TYPE SCHEMA
READER_KEYWORD SCHEMA_1
READER_GEN_DIRECTIVES _MERGE_SCHEMAS,YES,SCHEMA_READER,yes,REAL_FORMAT,GUESS_FROM_EXTENSION,DYNAMIC_WORKFLOW,yes,SCHEMA_EXPOSE_FORMAT_ATTRS,,EXPOSE_ATTRS_GROUP,FME_DISCLOSURE_OPEN
WRITER_TYPE NULL
WRITER_KEYWORD NULL_DEST
NULL_DEST_DATASET null
#! END_WB_HEADER
#! START_WB_HEADER
MACRO WB_KEYWORD "SCHEMA_1"
#! END_WB_HEADER
#! START_SOURCE_HEADER SCHEMA SCHEMA_1
SCHEMA_1_DYNAMIC_WORKFLOW YES
# The dataset this mapping file was generated from was:
#! END_SOURCE_HEADER
#! START_WB_HEADER
DEFAULT_MACRO SourceDataset
INCLUDE [ if {{$(SourceDataset)} != ""} {                        \
 puts {DEFAULT_MACRO SourceDataset_SCHEMA_1 $(SourceDataset)}     \
 } ]
#! END_WB_HEADER
#! START_SOURCE_HEADER SCHEMA SCHEMA_1
DEFAULT_MACRO SourceDataset_SCHEMA_1 $(SourceDataset_SCHEMA)
GUI FILE_OR_URL SourceDataset_SCHEMA_1 All_files|* Source Dataset:
SCHEMA_1_EXTENSION
DEFAULT_MACRO SCHEMA_IN_REAL_FORMAT_SCHEMA_1 $(SCHEMA_IN_REAL_FORMAT_SCHEMA)
SCHEMA_1_REAL_FORMAT "$(SCHEMA_IN_REAL_FORMAT_SCHEMA_1)"
GUI READERPICK SCHEMA_IN_REAL_FORMAT_SCHEMA_1 Input Format:
DEFAULT_MACRO SCHEMA_IN_SCHEMA_READER_SCHEMA_1 yes
SCHEMA_1_SCHEMA_READER "$(SCHEMA_IN_SCHEMA_READER_SCHEMA_1)"
DEFAULT_MACRO SCHEMA_IN_EXPOSE_ATTRS_GROUP_SCHEMA_1 FME_DISCLOSURE_OPEN
SCHEMA_1_EXPOSE_ATTRS_GROUP "$(SCHEMA_IN_EXPOSE_ATTRS_GROUP_SCHEMA_1)"
GUI DISCLOSUREGROUP SCHEMA_IN_EXPOSE_ATTRS_GROUP_SCHEMA_1 SCHEMA_EXPOSE_FORMAT_ATTRS Schema Attributes
# ===========================================================================
DEFAULT_MACRO SCHEMA_IN_NETWORK_AUTHENTICATION_SCHEMA_1 
SCHEMA_1_NETWORK_AUTHENTICATION "$(SCHEMA_IN_NETWORK_AUTHENTICATION_SCHEMA_1)"
GUI OPTIONAL AUTHENTICATOR SCHEMA_IN_NETWORK_AUTHENTICATION_SCHEMA_1 CONTAINER%GROUP%CONTAINER_TITLE%"Network Authentication"%PROMPT_TYPE%NETWORK Network Authentication
SCHEMA_1_DATASET "$(SourceDataset_SCHEMA_1)"
#! END_SOURCE_HEADER
#! END_HEADER

LOG_FILENAME "$(FME_MF_DIR)Read_All_CSV_Schemas.log"
LOG_APPEND NO
LOG_MAX_FEATURES 200
LOG_MAX_RECORDED_FEATURES 200
LOG_MAX_PRECISION Yes
FME_REPROJECTION_ENGINE FME
FME_IMPLICIT_CSMAP_REPROJECTION_MODE Auto
FME_GEOMETRY_HANDLING Enhanced
FME_STROKE_MAX_DEVIATION 0
LOG_FILTER_MASK -1
DEFAULT_MACRO DATASET_KEYWORD_SCHEMA_1 SCHEMA_1
# -------------------------------------------------------------------------

SCHEMA_1_READER_META_ATTRIBUTES fme_basename fme_feature_type

# -------------------------------------------------------------------------

SCHEMA_1_FEATURE_TYPES $(FEATURE_TYPES)
MULTI_READER_CONTINUE_ON_READER_FAILURE No

# -------------------------------------------------------------------------

MACRO WORKSPACE_NAME Read_All_CSV_Schemas
MACRO FME_VIEWER_APP fmedatainspector
# -------------------------------------------------------------------------

INCLUDE [ if {[info exists env(FME_TEMP)] && [file isdirectory $env(FME_TEMP)]} {set gVisualizerTemp $env(FME_TEMP)}  elseif {[info exists env(TEMP)] && [file isdirectory $env(TEMP)]}  {set gVisualizerTemp $env(TEMP)}  elseif { $tcl_platform(platform) == "unix" } {set gVisualizerTemp "/tmp"} else {set gVisualizerTemp c:};  regsub -all {[ ,&]} {$(WORKSPACE_NAME)} {_} wsname; set gVisualizerTemp $gVisualizerTemp/${wsname}_[clock format [clock seconds] -format %H%M%S];  puts "MACRO WORKSPACE_TEMP_DIR $gVisualizerTemp"; 
MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/inspector.ffs
MACRO VISUALIZER_SCHEMA_FILE $(WORKSPACE_TEMP_DIR)/inspector.fsc
MACRO VISUALIZER_CREATE_SPATIAL_INDEX YES
# -------------------------------------------------------------------------

FACTORY_DEF * RoutingFactory   FACTORY_NAME "Router and Unexpected Input Remover"   INPUT FEATURE_TYPE *       @SupplyAttributes(multi_reader_keyword,SCHEMA_1)    ROUTE SCHEMA SCHEMA_1::schema TO FME_GENERIC ::schema ALIAS_GEOMETRY    MERGE_INPUT Yes   OUTPUT ROUTED FEATURE_TYPE *
SCHEMA_1_MERGE_DEF SCHEMA_1::schema GLOB *
DEFAULT_MACRO WB_CURRENT_CONTEXT
# -------------------------------------------------------------------------

# Set the directive to add all the meta-attributes to the features.
# We do this so users see all possible information in the viewed
# features.

READER_META_ATTRIBUTES fme_feature_type fme_dataset fme_basename
# Assumption is that the workspace temp dir has been already set and created.  See controldefs.cpp - ControlDefs::writeVisualizerTempDir
DEFAULT_MACRO WORKSPACE_TEMP_DIR
INCLUDE [         set grpByAttrs {};         if { [string length $grpByAttrs] > 0 } {             if { [string first "@EvaluateExpression" $grpByAttrs] == 0 } {                 puts "MACRO CATMAC _$grpByAttrs" ;             } else {                set catter "" ;                set comma "" ;                foreach attr $grpByAttrs {                    set catter "$catter$comma@Value(\"$attr\")" ;                    set comma ",_," ;                } ;                puts "MACRO CATMAC _@Concatenate($catter)" ;             }         }         else {             puts "MACRO CATMAC " ;         };         set safeName "[regsub -all {[^a-zA-Z0-9]} {_All_} _]_[expr round(rand() * 1000000)]_[clock clicks  -milliseconds]";         puts "MACRO SAFE_FFS_NAME $safeName";         ]
# Make the temporary directory that the FFS files will live in.
FACTORY_DEF * CreationFactory      FACTORY_NAME _All__DirCreator      OUTPUT FEATURE_TYPE __nukeme__          @Tcl2("catch {file mkdir {$(WORKSPACE_TEMP_DIR)}}")
FACTORY_DEF * TeeFactory    FACTORY_NAME _All__DirCreatorCleanerUpper    INPUT FEATURE_TYPE __nukeme__
# Send raster, point cloud and vector features down different paths to prepare
# them for viewing

FACTORY_DEF * TestFactory    FACTORY_NAME _All__FeatureDirector    INPUT  FEATURE_TYPE schema    TEST &fme_type == "fme_raster"    OUTPUT FAILED FEATURE_TYPE _All____NotRasterFeatures___    OUTPUT PASSED FEATURE_TYPE _All____RasterFeatures___
FACTORY_DEF * TestFactory    FACTORY_NAME _All____FeatureDirector1    INPUT FEATURE_TYPE _All____NotRasterFeatures___    TEST &fme_type == "fme_point_cloud"    OUTPUT FAILED FEATURE_TYPE _All____VectorFeatures___    OUTPUT PASSED FEATURE_TYPE _All____PointCloudFeatures___
# Vector features simply may get their colors overridden

FACTORY_DEF * TeeFactory    FACTORY_NAME _All__VectorSetterUpper    INPUT FEATURE_TYPE _All____VectorFeatures___    OUTPUT FEATURE_TYPE __viewme__
# Point Cloud Features Might Need to be thinned

# Note that we don't call the ThinPointCloud function directly, but rather
# do it through TCL. This should allow this transformer to be used with a
# Desktop license, even though ThinPointCloud requires Professional.

Tcl2 proc _All__203bef12_d882_4abd_bda9_79bdd82ea37f1_thinPointCloud {} {    if {[string equal {NO_THINNING} {KEEPNPOINT}]}    {       FME_Execute ThinPointCloud NO_THINNING "\"<Unused>\"";    }    elseif {[string equal {NO_THINNING} {MAXNUMPOINTS}]}    {       FME_Execute ThinPointCloud NO_THINNING "\"<Unused>\"";    }    elseif {[string equal {NO_THINNING} {FIRSTNPOINTS}]}    {       FME_Execute ThinPointCloud NO_THINNING "\"<Unused>\"";    }    elseif {[string equal {NO_THINNING} {LASTNPOINTS}]}    {       FME_Execute ThinPointCloud NO_THINNING "\"<Unused>\"";    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME _All____PointCloudThinner    INPUT FEATURE_TYPE _All____PointCloudFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("_All__203bef12_d882_4abd_bda9_79bdd82ea37f1_thinPointCloud")
Tcl2 proc _All__203bef12_d882_4abd_bda9_79bdd82ea37f1_prepareRaster {subsetStartRow subsetNumRows subsetStartCol subsetNumCols} {    set useDI [string equal -nocase {$(FME_VIEWER_APP)} {fmedatainspector}];    if {!$useDI} {       FME_Execute ApplyRasterRotation BILINEAR;    };    set doResample [string equal {NoReduction} {Resample}];    set doSubset [string equal {NoReduction} {Subset}];    set doBounds [string equal {NoReduction} {BoundingBoxOnly}];    if {$doBounds}  {       FME_Execute GeometryType fme_polygon;    }    elseif {$doResample || $doSubset} {       set comment {          First, we need to prefix all the attributes. This is done because          we are going to call @RasterProperties, and we want to make sure          it doesn't overwrite any existing attributes.       };       set kAttrPrefix ".";       set allNames [FME_AttributeNames];       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $newName $oldName;       };       FME_Execute RasterProperties RASTER;       if {$doResample} {          set oldNumCols [FME_GetAttribute _num_columns];          set oldNumRows [FME_GetAttribute _num_rows];          set oldSpacingX [FME_GetAttribute _spacing_x];          set oldSpacingY [FME_GetAttribute _spacing_y];          set kMinNumCells 32;          set kMaxNumCells 512;          set comment {             We will only resample if both dimensions are greater than the             minimum num cells, and at least one is greater than the maximum.          };          if {$oldNumRows > $kMinNumCells && $oldNumCols > $kMinNumCells && ($oldNumRows > $kMaxNumCells || $oldNumCols > $kMaxNumCells)} {             set newSpacingX 1.0;             set newSpacingY 1.0;             if {$oldNumRows > $oldNumCols} {                set comment {                   If we have more rows than columns, we need to choose a spacing                   that reduces the number of rows to the maximum we've chosen.                };                set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMaxNumCells];                set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                set comment {                   Now we need to check if doing this will result in the columns                   going below the minimum. If so, choose the spacing such that                   we only go down to the minimum (and not past).                };                set newNumCols [expr $oldNumCols * $oldSpacingX / $newSpacingX];                if {$newNumCols < $kMinNumCells}                {                   set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMinNumCells];                   set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                };             }             else {                set comment {                   This is identical to the above case, except the roles of                   rows and cols are reversed.                };                set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMaxNumCells];                set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                set newNumRows [expr $oldNumRows * $oldSpacingY / $newSpacingY];                if {$newNumRows < $kMinNumCells}                {                   set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMinNumCells];                   set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                };             };             FME_Execute ResampleRaster CELL_SIZE $newSpacingX $newSpacingY NearestNeighbor;          };       }       elseif {$doSubset} {          set comment {             Get the value of some strings that may be attributes or constants.             Note that we pass in the attribute prefix we're using, because if             one does turn out to be an attribute, it won't actually be the exact             name in the string (since we renamed all our attributes above).          };          set rasterNumRows [FME_GetAttribute _num_rows];          set rasterNumCols [FME_GetAttribute _num_columns];          set comment {             Only do subsetting if the specified start position is actually             within the raster.          };          if {$subsetStartRow < $rasterNumRows && $subsetStartCol < $rasterNumCols}          {             set comment {                Now bound the subset to the size of the raster, so that                we don't create padding.             };             if {[expr $subsetStartRow + $subsetNumRows] > $rasterNumRows}             {                set subsetNumRows [expr $rasterNumRows - $subsetStartRow];             };             if {[expr $subsetStartCol + $subsetNumCols] > $rasterNumCols}             {                set subsetNumCols [expr $rasterNumCols - $subsetStartCol];             };             FME_Execute SubsetRaster $subsetStartRow $subsetNumRows $subsetStartCol $subsetNumCols;          };       };       set comment {          Remove all the attributes added by @RasterProperties and remove the          prefix from the real attributes. We assume they all start with an          underscore.       };       FME_Execute RemoveAttributes fme_regexp_match {^_};       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $oldName $newName;       };    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME _All__RasterSetterUpper    INPUT FEATURE_TYPE _All____RasterFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("_All__203bef12_d882_4abd_bda9_79bdd82ea37f1_prepareRaster {<Unused>} {<Unused>} {<Unused>} {<Unused>}")
# Now route all the features into the recorder, changing their
# feature type to the transformer name so that they view nicely
# _All__203bef12_d882_4abd_bda9_79bdd82ea37f1_VIS_FEAT_TYPE changes the feature types
# of the features being visualized.

DEFAULT_MACRO _All__203bef12_d882_4abd_bda9_79bdd82ea37f1_VIS_FEAT_TYPE _All_$(CATMAC)
DEFAULT_MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/$(SAFE_FFS_NAME).ffs
DEFAULT_MACRO VISUALIZER_CREATE_SPATIAL_INDEX NO
# [PR#45549] The Data Inspector will limit the maximum number of features
# it reads on WIN32, so we will correspondingly limit the number of
# features we record here using the MAX_FEATURES_TO_RECORD directive.

FACTORY_DEF * RecorderFactory    FACTORY_NAME _All__Recorder    INPUT FEATURE_TYPE __viewme__  _wb_termination_feature Yes @FeatureType(TERMINATOR_@Value(_wb_termination_xformer))    INPUT FEATURE_TYPE __viewme__  @FeatureType($(_All__203bef12_d882_4abd_bda9_79bdd82ea37f1_VIS_FEAT_TYPE))    FEATURE_FILE "$(VISUALIZER_FEATURE_FILE)"    CREATE_SPATIAL_INDEX "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    INSPECTOR "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    FSC_SCHEMA fme_feature_type_name,varchar<openparen>255<closeparen>,fme_format_long_name,varchar<openparen>255<closeparen>,fme_format_short_name,varchar<openparen>255<closeparen>,fme_basename,varchar<openparen>255<closeparen>    MODE RECORD    RECORD_DIRECTLY_TO_DISK YES    MAX_FEATURES_TO_RECORD WIN32 2000000

# -------------------------------------------------------------------------

FACTORY_DEF * RoutingFactory FACTORY_NAME "Destination Feature Type Routing Correlator"   INPUT FEATURE_TYPE *   OUTPUT ROUTED FEATURE_TYPE * @FeatureType(ENCODED,@Value(__wb_out_feat_type__)) @RemoveAttributes(__wb_out_feat_type__)   OUTPUT NOT_ROUTED FEATURE_TYPE __nuke_me__ @Tcl2("FME_StatMessage 818059 [FME_GetAttribute fme_template_feature_type] 818060 818061 fme_warn")
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory   FACTORY_NAME "Final Output Nuker"   INPUT FEATURE_TYPE __nuke_me__

# -------------------------------------------------------------------------

FACTORY_DEF * CreationFactory   CREATE_AT_END   OUTPUT FEATURE_TYPE __NUKEME__   @TCL("if [file exists {$(WORKSPACE_TEMP_DIR)}] {set files [glob -nocomplain -directory  {$(WORKSPACE_TEMP_DIR)} -tails *.ffs];   if {[llength $files] == 1} {    set theFile {$(WORKSPACE_TEMP_DIR)/};   append theFile [lindex $files 0];   eval FME_Execute System \173\042$(FME_HOME_UNIX)/fmedatainspector\042 --visualizer --single-application --delete-on-close --no-source-prompt -f FFS $theFile & \175;  } elseif { [llength $files] == 0 } {  catch { file delete -force {$(WORKSPACE_TEMP_DIR)} };  } else {  set filesNoExt {}; set lastfile {}; foreach {fileName} [lsort $files] { set fileNoExt [string trimright $fileName {.ffs}]; if [regexp {(.*)_[0-9]*$} $fileNoExt wholething fileNoExtBase] {  if { $fileNoExtBase == $lastfile } { continue } }; set lastfile $fileNoExt; lappend filesNoExt $fileNoExt };  eval FME_Execute System \173\042$(FME_HOME_UNIX)/fmedatainspector\042 --visualizer --single-application --delete-on-close --no-source-prompt -d {$(WORKSPACE_TEMP_DIR)} -a ffs -f FFS $filesNoExt & \175; }; }; ")
FACTORY_DEF * TeeFactory   INPUT FEATURE_TYPE __NUKEME__
